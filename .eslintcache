[{"/Users/haykal/Documents/FundsToVotes/src/index.js":"1","/Users/haykal/Documents/FundsToVotes/src/App.js":"2","/Users/haykal/Documents/FundsToVotes/src/reportWebVitals.js":"3","/Users/haykal/Documents/FundsToVotes/src/PropublicaCandidateAPI.js":"4","/Users/haykal/Documents/FundsToVotes/src/LandingPage.js":"5"},{"size":500,"mtime":1611868470520,"results":"6","hashOfConfig":"7"},{"size":181,"mtime":1613831721555,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611868470520,"results":"9","hashOfConfig":"7"},{"size":3775,"mtime":1613832560921,"results":"10","hashOfConfig":"7"},{"size":943,"mtime":1613832563332,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rgqi28",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/haykal/Documents/FundsToVotes/src/index.js",[],["24","25"],"/Users/haykal/Documents/FundsToVotes/src/App.js",[],"/Users/haykal/Documents/FundsToVotes/src/reportWebVitals.js",[],"/Users/haykal/Documents/FundsToVotes/src/PropublicaCandidateAPI.js",["26","27","28"],"import { useEffect, useState } from \"react\";\nimport Dropdown from 'react-dropdown';\n\n// Finding the list of respresentatives for an address and showing a dropdown with a list of them\nexport function GoogleAPI(props) {\n    const [officials, setOfficials] = useState([\"\"]);\n    //let addressString = encodeURIComponent(props.address);\n    let addressString = encodeURIComponent('15232 NE 3rd PL Bellevue WA 98007');\n    useEffect(() => {\n        fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=\" + addressString + \"&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n            method: \"GET\",\n            'Content-Type': 'application/json',\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    let startIndexSen = result['offices'][2]['officialIndices'][0];\n                    let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n                    let offNames = new Array(endIndexSen - startIndexSen + 1);\n                    let tempIndex = 0;\n                    for(let i = startIndexSen; i <= endIndexSen; i++) {\n                        offNames[tempIndex] = result['officials'][i].name;\n                        tempIndex++;\n                    }\n                    setOfficials(offNames);\n                    console.log(offNames);\n                }\n            )\n    }, [])\n\n    return (\n        <div>\n            <Dropdown options={officials} placeholder='Select a Candidate ..' onChange={e => oneRepVotes(e.value)}/>\n        </div>\n    )\n}\n\n// Taking the senator name from the dropdown selection and allowing the specific API calls to happen\nfunction oneRepVotes(name) {\n    let crpID = '';\n    let offID = '';\n    \n    //useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(name);\n                    console.log(result);\n                    let nameArray = name.split(\" \");\n                    let offFName = nameArray[0];\n                    let offLName = nameArray[nameArray.length - 1];\n                    let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                    offID = result['results'][0]['members'][indexOfOfficial]['id'];\n                    crpID = result['results'][0]['members'][indexOfOfficial]['crp_id'];\n                    console.log(offID);\n                    console.log(crpID);\n                    return fetch(\"https://api.propublica.org/congress/v1/members/\" + offID + \"/votes.json\", {\n                        method: \"GET\",\n                        headers: {\n                            \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n                        }\n                    });\n                }\n            )\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    return fetch(\"http://www.opensecrets.org/api/?method=candSector&cid=\" + crpID + \"&cycle=2020&apikey=\" + \"36b9f9c9066b76213e6f0c51dd12a605\" + \"&output=json\", {\n                        method: \"GET\"\n                    })\n                }\n            )\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                }\n            )\n    //}, [])\n    \n\n    return (\n        <p>{crpID}</p>\n    );\n}\n\n","/Users/haykal/Documents/FundsToVotes/src/LandingPage.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":30,"column":8,"nodeType":"35","endLine":30,"endColumn":10,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":76,"column":123,"nodeType":"39","messageId":"40","endLine":76,"endColumn":124},{"ruleId":"37","severity":1,"message":"38","line":76,"column":160,"nodeType":"39","messageId":"40","endLine":76,"endColumn":161},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addressString'. Either include it or remove the dependency array.","ArrayExpression",["43"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [addressString]",{"range":"46","text":"47"},[1469,1471],"[addressString]"]