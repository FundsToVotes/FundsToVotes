{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/haykal/Documents/FundsToVotes/app/src/PropublicaCandidateAPI.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport function PropublicaCongress(props) {\n  _s();\n\n  //const [candidateData, setCandidateData] = useState([]);\n  let officials = props.officials;\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      let offID = new Array(officials.length);\n\n      for (let i = 0; i < officials.length; i++) {\n        let nameArray = officials[i].split(\" \");\n        let offFName = nameArray[0];\n        let offLName = nameArray[nameArray.length - 1];\n        let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n        offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n      }\n\n      setOfficialsID(offID);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PropublicaCongress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PropublicaCongress;\nexport function GoogleAPI() {\n  _s2();\n\n  const [officials, setOfficials] = useState();\n  useEffect(() => {\n    fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n      method: \"GET\",\n      'Content-Type': 'application/json'\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      let startIndexSen = result['offices'][2]['officialIndices'][0];\n      let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n      let offNames = new Array(result['officials'].length);\n\n      for (let i = startIndexSen; i <= endIndexSen; i++) {\n        offNames[i] = /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result['officials'][i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this);\n      }\n\n      setOfficials(offNames);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [officials, /*#__PURE__*/_jsxDEV(OneRepVotes, {\n      name: officials[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(GoogleAPI, \"EdyqKrLLLbb1QW6FNuK4vwDyjks=\");\n\n_c2 = GoogleAPI;\n\nfunction OneRepVotes(props) {\n  _s3();\n\n  let name = props.name;\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      let nameArray = name.split(\" \");\n      let offFName = nameArray[0];\n      let offLName = nameArray[nameArray.length - 1];\n      let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n      offID = result['results'][0]['members'][indexOfOfficial]['id'];\n      console.log(offID);\n      return fetch(\"https://api.propublica.org/congress/v1/members/\" + officialsID[0] + \"/votes.json\", {\n        method: \"GET\",\n        headers: {\n          \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n        }\n      });\n    }).then(res => res.json()).then(result => {\n      //setCandidateData(result['results'][0]['members']);\n      console.log(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"h\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(OneRepVotes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = OneRepVotes;\nexport function SenatorInfo() {\n  _s4();\n\n  const [officials, setOfficials] = useState([\" \"]);\n  const [officialsID, setOfficialsID] = useState([\" \"]); // Getting officials (senators rn) for address)\n\n  useEffect(() => {\n    fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n      method: \"GET\",\n      'Content-Type': 'application/json'\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      let startIndexSen = result['offices'][2]['officialIndices'][0];\n      let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n      let offNames = new Array(result['officials'].length);\n\n      for (let i = startIndexSen; i <= endIndexSen; i++) {\n        offNames[i] = /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result['officials'][i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 39\n        }, this);\n      }\n\n      setOfficials(offNames);\n    });\n  }, []); // Seperate call of representative list\n  // Getting from official name to ID (senate)\n\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      let offID = new Array(officials.length);\n\n      for (let i = 0; i < officials.length; i++) {\n        let nameArray = officials[i].split(\" \");\n        let offFName = nameArray[0];\n        let offLName = nameArray[nameArray.length - 1];\n        let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n        offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n      }\n\n      setOfficialsID(offID);\n      console.log(offID);\n    });\n  }, []); // Getting votes of one member (senator)\n\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/members/\" + officialsID[0] + \"/votes.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      //setCandidateData(result['results'][0]['members']);\n      console.log(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(SenatorInfo, \"+bnD7zJ9rJ43VeEs+MZ5K8L34Lg=\");\n\n_c4 = SenatorInfo;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"PropublicaCongress\");\n$RefreshReg$(_c2, \"GoogleAPI\");\n$RefreshReg$(_c3, \"OneRepVotes\");\n$RefreshReg$(_c4, \"SenatorInfo\");","map":{"version":3,"sources":["/Users/haykal/Documents/FundsToVotes/app/src/PropublicaCandidateAPI.js"],"names":["useEffect","useState","PropublicaCongress","props","officials","fetch","method","headers","then","res","json","result","offID","Array","length","i","nameArray","split","offFName","offLName","indexOfOfficial","findIndex","x","first_name","last_name","setOfficialsID","GoogleAPI","setOfficials","console","log","startIndexSen","endIndexSen","offNames","name","OneRepVotes","officialsID","SenatorInfo"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport function PropublicaCongress(props) {\n    //const [candidateData, setCandidateData] = useState([]);\n    let officials = props.officials;\n\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let offID = new Array(officials.length);\n                    for(let i = 0; i < officials.length; i++) {\n                        let nameArray = officials[i].split(\" \");\n                        let offFName = nameArray[0];\n                        let offLName = nameArray[nameArray.length - 1];\n                        let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                        offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n                    }\n                    setOfficialsID(offID);\n                }\n            )\n    }, [])\n\n\n    return (\n        <div>\n            <p>{}</p>\n        </div>\n    );\n}\n\nexport function GoogleAPI() {\n    const [officials, setOfficials] = useState();\n    useEffect(() => {\n        fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n            method: \"GET\",\n            'Content-Type': 'application/json',\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    let startIndexSen = result['offices'][2]['officialIndices'][0];\n                    let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n                    let offNames = new Array(result['officials'].length);\n                    for(let i = startIndexSen; i <= endIndexSen; i++) {\n                        offNames[i] = <li>{result['officials'][i].name}</li>;\n                    }\n                    setOfficials(offNames);\n                }\n            )\n    }, [])\n\n    return (\n        <div>\n            {officials}\n            <OneRepVotes name={officials[0]}/>\n        </div>\n    )\n}\n\nfunction OneRepVotes(props) {\n\n    let name = props.name;\n\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let nameArray = name.split(\" \");\n                    let offFName = nameArray[0];\n                    let offLName = nameArray[nameArray.length - 1];\n                    let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                    offID = result['results'][0]['members'][indexOfOfficial]['id'];\n                    console.log(offID);\n                    return fetch(\"https://api.propublica.org/congress/v1/members/\" + officialsID[0] + \"/votes.json\", {\n                        method: \"GET\",\n                        headers: {\n                            \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n                        }\n                    });\n                }\n            )\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    //setCandidateData(result['results'][0]['members']);\n                    console.log(result);\n                }\n            )\n    }, [])\n\n    return (\n        <div>h</div>\n    );\n}\n\nexport function SenatorInfo() {\n    const [officials, setOfficials] = useState([\" \"]);\n    const [officialsID, setOfficialsID] = useState([\" \"]);\n\n    \n    // Getting officials (senators rn) for address)\n    useEffect(() => {\n        fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n            method: \"GET\",\n            'Content-Type': 'application/json',\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    let startIndexSen = result['offices'][2]['officialIndices'][0];\n                    let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n                    let offNames = new Array(result['officials'].length);\n                    for(let i = startIndexSen; i <= endIndexSen; i++) {\n                        offNames[i] = <li>{result['officials'][i].name}</li>;\n                    }\n                    setOfficials(offNames);\n                }\n            )\n    }, [])\n    \n    // Seperate call of representative list\n\n    // Getting from official name to ID (senate)\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let offID = new Array(officials.length);\n                    for(let i = 0; i < officials.length; i++) {\n                        let nameArray = officials[i].split(\" \");\n                        let offFName = nameArray[0];\n                        let offLName = nameArray[nameArray.length - 1];\n                        let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                        offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n                    }\n                    setOfficialsID(offID);\n                    console.log(offID);\n                }\n            )\n    }, [])\n\n    // Getting votes of one member (senator)\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/members/\" + officialsID[0] + \"/votes.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    //setCandidateData(result['results'][0]['members']);\n                    console.log(result);\n                }\n            )\n    }, [])\n\n\n    return (\n        <div>\n            <p>{}</p>\n        </div>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}