{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/haykal/Documents/FundsToVotes/src/PropublicaCandidateAPI.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, useParams } from 'react-router-dom';\nimport Dropdown from 'react-dropdown';\nexport function PropublicaCongress(props) {\n  _s();\n\n  //const [candidateData, setCandidateData] = useState([]);\n  let officials = props.officials;\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {// let offID = new Array(officials.length);\n      // for(let i = 0; i < officials.length; i++) {\n      //     let nameArray = officials[i].split(\" \");\n      //     let offFName = nameArray[0];\n      //     let offLName = nameArray[nameArray.length - 1];\n      //     let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n      //     offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n      // }\n      // setOfficialsID(offID);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PropublicaCongress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PropublicaCongress;\nexport function GoogleAPI() {\n  _s2();\n\n  const [officials, setOfficials] = useState([\"\"]);\n  useEffect(() => {\n    fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n      method: \"GET\",\n      'Content-Type': 'application/json'\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      let startIndexSen = result['offices'][2]['officialIndices'][0];\n      let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n      let offNames = new Array(endIndexSen - startIndexSen + 1);\n      let tempIndex = 0;\n\n      for (let i = startIndexSen; i <= endIndexSen; i++) {\n        offNames[tempIndex] = result['officials'][i].name;\n        tempIndex++;\n      }\n\n      setOfficials(offNames);\n      console.log(offNames);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      options: officials,\n      placeholder: \"Select a Candidate ..\",\n      onChange: e => oneRepVotes(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n} // function OfficialList(props) {\n//     let offItems = props.officials.map((officialName) => {\n//         return <OfficialItem name={officialName} />\n//     })\n//     return (\n//             <ul>\n//                 {offItems}\n//             </ul>\n//     )\n// }\n// function OfficialItem(props) {\n//     return (\n//         <p>props.name</p>\n//     )\n// }\n\n_s2(GoogleAPI, \"CnGTEyRBLacECulXmzkD+3Wp4Eo=\");\n\n_c2 = GoogleAPI;\n\nfunction oneRepVotes(name) {\n  _s3();\n\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      if (typeof name === 'undefined') {\n        return '';\n      }\n\n      console.log(name);\n      console.log(result);\n      let nameArray = name.split(\" \");\n      let offFName = nameArray[0];\n      let offLName = nameArray[nameArray.length - 1];\n      let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n      let offID = result['results'][0]['members'][indexOfOfficial]['id'];\n      console.log(offID); // return fetch(\"https://api.propublica.org/congress/v1/members/\" + offID + \"/votes.json\", {\n      //     method: \"GET\",\n      //     headers: {\n      //         \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      //     }\n      // });\n    });\n  }, []);\n}\n\n_s3(oneRepVotes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport function SenatorInfo() {\n  _s4();\n\n  const [officials, setOfficials] = useState([\" \"]);\n  const [officialsID, setOfficialsID] = useState([\" \"]); // Getting officials (senators rn) for address)\n\n  useEffect(() => {\n    fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n      method: \"GET\",\n      'Content-Type': 'application/json'\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      let startIndexSen = result['offices'][2]['officialIndices'][0];\n      let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n      let offNames = new Array(result['officials'].length);\n\n      for (let i = startIndexSen; i <= endIndexSen; i++) {\n        offNames[i] = /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result['officials'][i].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 39\n        }, this);\n      }\n\n      setOfficials(offNames);\n    });\n  }, []); // Seperate call of representative list\n  // Getting from official name to ID (senate)\n\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      let offID = new Array(officials.length);\n\n      for (let i = 0; i < officials.length; i++) {\n        let nameArray = officials[i].split(\" \");\n        let offFName = nameArray[0];\n        let offLName = nameArray[nameArray.length - 1];\n        let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n        offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n      }\n\n      setOfficialsID(offID);\n      console.log(offID);\n    });\n  }, []); // Getting votes of one member (senator)\n\n  useEffect(() => {\n    fetch(\"https://api.propublica.org/congress/v1/members/\" + officialsID[0] + \"/votes.json\", {\n      method: \"GET\",\n      headers: {\n        \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n      }\n    }).then(res => res.json()).then(result => {\n      //setCandidateData(result['results'][0]['members']);\n      console.log(result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(SenatorInfo, \"+bnD7zJ9rJ43VeEs+MZ5K8L34Lg=\");\n\n_c3 = SenatorInfo;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PropublicaCongress\");\n$RefreshReg$(_c2, \"GoogleAPI\");\n$RefreshReg$(_c3, \"SenatorInfo\");","map":{"version":3,"sources":["/Users/haykal/Documents/FundsToVotes/src/PropublicaCandidateAPI.js"],"names":["useEffect","useState","BrowserRouter","Router","Route","Link","useParams","Dropdown","PropublicaCongress","props","officials","fetch","method","headers","then","res","json","result","GoogleAPI","setOfficials","console","log","startIndexSen","endIndexSen","length","offNames","Array","tempIndex","i","name","e","oneRepVotes","target","value","nameArray","split","offFName","offLName","indexOfOfficial","findIndex","x","first_name","last_name","offID","SenatorInfo","officialsID","setOfficialsID"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Link, useParams} from 'react-router-dom';\nimport Dropdown from 'react-dropdown';\n\nexport function PropublicaCongress(props) {\n    //const [candidateData, setCandidateData] = useState([]);\n    let officials = props.officials;\n\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    // let offID = new Array(officials.length);\n                    // for(let i = 0; i < officials.length; i++) {\n                    //     let nameArray = officials[i].split(\" \");\n                    //     let offFName = nameArray[0];\n                    //     let offLName = nameArray[nameArray.length - 1];\n                    //     let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                    //     offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n                    // }\n                    // setOfficialsID(offID);\n                }\n            )\n    }, [])\n\n\n    return (\n        <div>\n            <p>{}</p>\n        </div>\n    );\n}\n\nexport function GoogleAPI() {\n    const [officials, setOfficials] = useState([\"\"]);\n    useEffect(() => {\n        fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n            method: \"GET\",\n            'Content-Type': 'application/json',\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    let startIndexSen = result['offices'][2]['officialIndices'][0];\n                    let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n                    let offNames = new Array(endIndexSen - startIndexSen + 1);\n                    let tempIndex = 0;\n                    for(let i = startIndexSen; i <= endIndexSen; i++) {\n                        offNames[tempIndex] = result['officials'][i].name;\n                        tempIndex++;\n                    }\n                    setOfficials(offNames);\n                    console.log(offNames);\n                }\n            )\n    }, [])\n\n    return (\n        <div>\n            <Dropdown options={officials} placeholder='Select a Candidate ..' onChange={e => oneRepVotes(e.target.value)}/>\n        </div>\n    )\n}\n\n// function OfficialList(props) {\n//     let offItems = props.officials.map((officialName) => {\n//         return <OfficialItem name={officialName} />\n//     })\n//     return (\n//             <ul>\n//                 {offItems}\n//             </ul>\n\n//     )\n// }\n\n// function OfficialItem(props) {\n//     return (\n//         <p>props.name</p>\n//     )\n// }\n\n\n\nfunction oneRepVotes(name) {\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if(typeof name === 'undefined') {\n                        return '';\n                    }\n                    console.log(name);\n                    console.log(result);\n                    let nameArray = name.split(\" \");\n                    let offFName = nameArray[0];\n                    let offLName = nameArray[nameArray.length - 1];\n                    let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                    let offID = result['results'][0]['members'][indexOfOfficial]['id'];\n                    console.log(offID);\n                    // return fetch(\"https://api.propublica.org/congress/v1/members/\" + offID + \"/votes.json\", {\n                    //     method: \"GET\",\n                    //     headers: {\n                    //         \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n                    //     }\n                    // });\n                }\n            )\n    }, [])\n}\n\nexport function SenatorInfo() {\n    const [officials, setOfficials] = useState([\" \"]);\n    const [officialsID, setOfficialsID] = useState([\" \"]);\n\n    \n    // Getting officials (senators rn) for address)\n    useEffect(() => {\n        fetch(\"https://civicinfo.googleapis.com/civicinfo/v2/representatives?address=15232%20NE%203rd%20Pl%20Bellevue%20Washington&key=AIzaSyCshtyTCb0erDxK5moA0nU3JT5crT5UWBQ\", {\n            method: \"GET\",\n            'Content-Type': 'application/json',\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    let startIndexSen = result['offices'][2]['officialIndices'][0];\n                    let endIndexSen = result['offices'][2]['officialIndices'][result['offices'][2]['officialIndices'].length - 1];\n                    let offNames = new Array(result['officials'].length);\n                    for(let i = startIndexSen; i <= endIndexSen; i++) {\n                        offNames[i] = <li>{result['officials'][i].name}</li>;\n                    }\n                    setOfficials(offNames);\n                }\n            )\n    }, [])\n    \n    // Seperate call of representative list\n\n    // Getting from official name to ID (senate)\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/116/senate/members.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let offID = new Array(officials.length);\n                    for(let i = 0; i < officials.length; i++) {\n                        let nameArray = officials[i].split(\" \");\n                        let offFName = nameArray[0];\n                        let offLName = nameArray[nameArray.length - 1];\n                        let indexOfOfficial = result['results'][0]['members'].findIndex(x => x.first_name === offFName & x.last_name === offLName);\n                        offID[i] = result['results'][0]['members'][indexOfOfficial]['id'];\n                    }\n                    setOfficialsID(offID);\n                    console.log(offID);\n                }\n            )\n    }, [])\n\n    // Getting votes of one member (senator)\n    useEffect(() => {\n        fetch(\"https://api.propublica.org/congress/v1/members/\" + officialsID[0] + \"/votes.json\", {\n            method: \"GET\",\n            headers: {\n                \"X-API-Key\": \"AYZVqN2QlJkxBhkzZ4JsFd9J3cZG1SuoWNee9QoS\"\n            }\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    //setCandidateData(result['results'][0]['members']);\n                    console.log(result);\n                }\n            )\n    }, [])\n\n\n    return (\n        <div>\n            <p>{}</p>\n        </div>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}